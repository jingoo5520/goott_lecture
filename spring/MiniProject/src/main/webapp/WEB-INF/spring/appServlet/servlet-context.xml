<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<!-- 수신된 Multipart의 데이터를 순서대로 재조립, 파일 업로드 제한: 10MB -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>

	<!-- 인터셉터 설정 -->
	<beans:bean id="exampleInterceptor" class="com.miniproject.interceptor.InterceptorExample">
	</beans:bean>

	<beans:bean id="interceptor1" class="com.miniproject.interceptor.Interceptor1">
	</beans:bean>

	<beans:bean id="interceptor2" class="com.miniproject.interceptor.Interceptor2">
	</beans:bean>

	<beans:bean id="loginIntercepter" class="com.miniproject.interceptor.LoginIntercepter">
	</beans:bean>

	<beans:bean id="authInterceptor" class="com.miniproject.interceptor.AuthInterceptor">
	</beans:bean>

	<!-- 인터셉터가 동작하는 매핑 주소 설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/exampleInterceptor" />
			<beans:ref bean="exampleInterceptor" />
		</interceptor>

		<interceptor>
			<mapping path="/example" />
			<beans:ref bean="interceptor1" />
		</interceptor>

		<interceptor>
			<mapping path="/example" />
			<beans:ref bean="interceptor1" />
		</interceptor>

		<interceptor>
			<mapping path="/member/login" />
			<beans:ref bean="loginIntercepter" />
		</interceptor>

		<interceptor>
			<mapping path="/hboard/saveBoard" />
			<mapping path="/hboard/modifyBoard" />
			<mapping path="/hboard/removeBoard" />
			<mapping path="/hboard/showReplyForm" />
			
			<mapping path="/cboard/showSaveBoardForm" />
			<mapping path="/cboard/modifyBoard" />

			<beans:ref bean="authInterceptor" />
		</interceptor>
	</interceptors>

	<!-- 자동으로 스프링 Bean으로 등록할 클래스를 스캔하게 만듬 -->
	<!-- @Controller, @Service, @Repository, @Component 어노테이션을 찾아 등록 -->
	<context:component-scan base-package="com.miniproject.controller" />


</beans:beans>
